{"version":3,"sources":["../src/_version.ts","../src/DirResolver.ts","../src/Enum.ts","../src/Event.ts","nullstone.js","../src/Interface.ts","../src/ICollection.ts","../src/IEnumerable.ts","../src/IEnumerator.ts","../src/IndexedPropertyInfo.ts","../src/Library.ts","../src/LibraryResolver.ts","../src/Memoizer.ts","../src/Property.ts","../src/PropertyInfo.ts","../src/Type.ts","../src/conversion.ts","../src/Uri.ts","../src/TypeManager.ts","../src/annotations.ts","../src/async.ts","../src/equals.ts","../src/errors/AggregateError.ts","../src/errors/DirLoadError.ts","../src/errors/LibraryLoadError.ts","../src/markup/IMarkupExtension.ts","../src/markup/IMarkupParser.ts","../src/markup/Markup.ts","../src/markup/MarkupDependencyResolver.ts","../src/markup/xaml/XamlExtensionParser.ts","../src/markup/xaml/XamlMarkup.ts","../src/markup/xaml/XamlParser.ts"],"names":["nullstone","nullstone.DirResolver","nullstone.DirResolver.loadAsync","nullstone.DirResolver.resolveType","nullstone.Enum","nullstone.Enum.constructor","nullstone.Enum.fromAny","nullstone.Event","nullstone.Event.constructor","get","nullstone.Event.has","enumerable","configurable","nullstone.Event.on","nullstone.Event.off","nullstone.Event.raise","nullstone.Event.raiseAsync","nullstone.Interface","nullstone.Interface.constructor","nullstone.Interface.is","nullstone.Interface.as","nullstone.Interface.mark","IEnumerator_","empty","$$arr","arr","getEnumerator","isReverse","a","e","en","moveNext","push","current","nullstone.moveNext","index","len","length","undefined","nullstone.IndexedPropertyInfo","nullstone.IndexedPropertyInfo.propertyType","nullstone.IndexedPropertyInfo.getValue","nullstone.IndexedPropertyInfo.setValue","nullstone.IndexedPropertyInfo.find","this","value","GetValueAt","SetValueAt","nullstone.setTypeUri","nullstone.Library","nullstone.Library.constructor","nullstone.Library.sourcePath","set","nullstone.Library.rootModule","nullstone.Library.loadAsync","nullstone.Library.$configModule","nullstone.Library.resolveType","nullstone.Library.add","nullstone.Library.addPrimitive","nullstone.Library.addEnum","nullstone.LibraryResolver","nullstone.LibraryResolver.constructor","nullstone.LibraryResolver.createLibrary","nullstone.LibraryResolver.loadTypeAsync","nullstone.LibraryResolver.resolve","nullstone.LibraryResolver.resolveType","nullstone.LibraryResolver.$$onLibraryCreated","nullstone.Memoizer","nullstone.Memoizer.constructor","nullstone.Memoizer.memoize","nullstone.getPropertyDescriptor","nullstone.hasProperty","nullstone.PropertyInfo","nullstone.PropertyInfo.getValue","nullstone.PropertyInfo.setValue","nullstone.PropertyInfo.find","nameClosure","nullstone.getTypeName","nullstone.getTypeParent","nullstone.addTypeInterfaces","nullstone.doesInheritFrom","nullstone.convertAnyToType","nullstone.convertStringToEnum","nullstone.registerTypeConverter","nullstone.registerEnumConverter","val","c","toString","toUpperCase","parseFloat","Date","RegExp","Error","nullstone.UriKind","nullstone.Uri","nullstone.Uri.constructor","nullstone.Uri.kind","nullstone.Uri.host","nullstone.Uri.absolutePath","nullstone.Uri.scheme","nullstone.Uri.fragment","nullstone.Uri.originalString","nullstone.Uri.toString","nullstone.Uri.equals","nullstone.Uri.isNullOrEmpty","nullstone.TypeManager","nullstone.TypeManager.constructor","nullstone.TypeManager.resolveLibrary","nullstone.TypeManager.loadTypeAsync","nullstone.TypeManager.resolveType","nullstone.TypeManager.add","nullstone.TypeManager.addPrimitive","nullstone.TypeManager.addEnum","nullstone.Annotation","nullstone.GetAnnotations","nullstone.CreateTypedAnnotation","nullstone.CreateTypedAnnotation.ta","GetAnnotations","type","name","nullstone.async","nullstone.async.create","nullstone.async.create.resolve","nullstone.async.create.reject","onSuccess","success","onError","errored","resolvedResult","resolvedError","req","nullstone.async.resolve","nullstone.async.reject","nullstone.async.many","nullstone.async.many.completeSingle","nullstone.equals","nullstone.AggregateError","nullstone.AggregateError.constructor","nullstone.AggregateError.flat","nullstone.DirLoadError","nullstone.DirLoadError.constructor","nullstone.LibraryLoadError","nullstone.LibraryLoadError.constructor","nullstone.markup","nullstone.markup.finishMarkupExtension","nullstone.markup.parseType","nullstone.markup.createMarkupSax","nullstone.markup.on","nullstone.markup.setNamespaces","nullstone.markup.setExtensionParser","nullstone.markup.resolvePrefix","nullstone.markup.walkUpObjects","nullstone.markup.Markup","nullstone.markup.Markup.constructor","nullstone.markup.Markup.createParser","nullstone.markup.Markup.resolve","nullstone.markup.Markup.loadAsync","nullstone.markup.Markup.loadRoot","nullstone.markup.Markup.setRoot","nullstone.markup.MarkupDependencyResolver","nullstone.markup.MarkupDependencyResolver.constructor","nullstone.markup.MarkupDependencyResolver.collect","nullstone.markup.MarkupDependencyResolver.add","nullstone.markup.MarkupDependencyResolver.resolve","nullstone.markup.xaml","nullstone.markup.xaml.isAlpha","nullstone.markup.xaml.XamlExtensionParser","nullstone.markup.xaml.XamlExtensionParser.constructor","nullstone.markup.xaml.XamlExtensionParser.setNamespaces","nullstone.markup.xaml.XamlExtensionParser.parse","nullstone.markup.xaml.XamlExtensionParser.$$doParse","nullstone.markup.xaml.XamlExtensionParser.$$parseName","nullstone.markup.xaml.XamlExtensionParser.$$startExtension","nullstone.markup.xaml.XamlExtensionParser.$$parseXNull","nullstone.markup.xaml.XamlExtensionParser.$$parseXType","nullstone.markup.xaml.XamlExtensionParser.$$parseXStatic","nullstone.markup.xaml.XamlExtensionParser.$$parseKeyValue","nullstone.markup.xaml.XamlExtensionParser.$$finishKeyValue","nullstone.markup.xaml.XamlExtensionParser.$$parseSingleQuoted","nullstone.markup.xaml.XamlExtensionParser.$$ensure","nullstone.markup.xaml.XamlExtensionParser.onResolveType","nullstone.markup.xaml.XamlExtensionParser.onResolveObject","nullstone.markup.xaml.XamlExtensionParser.onResolvePrimitive","nullstone.markup.xaml.XamlExtensionParser.onError","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","nullstone.markup.xaml.XamlMarkup","nullstone.markup.xaml.XamlMarkup.constructor","nullstone.markup.xaml.XamlMarkup.create","nullstone.markup.xaml.XamlMarkup.createParser","nullstone.markup.xaml.XamlMarkup.loadRoot","nullstone.markup.xaml.findResourcesElement","nullstone.markup.xaml.XamlParser","nullstone.markup.xaml.XamlParser.constructor","nullstone.markup.xaml.XamlParser.on","nullstone.markup.xaml.XamlParser.setNamespaces","nullstone.markup.xaml.XamlParser.setExtensionParser","nullstone.markup.xaml.XamlParser.parse","nullstone.markup.xaml.XamlParser.skipBranch","nullstone.markup.xaml.XamlParser.walkUpObjects","nullstone.markup.xaml.XamlParser.walkUpObjects.moveNext","nullstone.markup.xaml.XamlParser.resolvePrefix","nullstone.markup.xaml.XamlParser.$$handleElement","nullstone.markup.xaml.XamlParser.$$handleResources","nullstone.markup.xaml.XamlParser.$$tryHandleError","nullstone.markup.xaml.XamlParser.$$tryHandlePropertyTag","nullstone.markup.xaml.XamlParser.$$tryHandlePrimitive","nullstone.markup.xaml.XamlParser.$$processAttributes","nullstone.markup.xaml.XamlParser.$$processAttribute","nullstone.markup.xaml.XamlParser.$$shouldSkipAttr","nullstone.markup.xaml.XamlParser.$$tryHandleXAttribute","nullstone.markup.xaml.XamlParser.$$handleAttribute","nullstone.markup.xaml.XamlParser.$$getAttrValue","nullstone.markup.xaml.XamlParser.$$destroy"],"mappings":"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","file":"nullstone.min.js","sourcesContent":["module nullstone {\r\n    export var version = '0.3.10';\r\n}","module nullstone {\r\n    export class DirResolver implements ITypeResolver {\r\n        loadAsync (moduleName: string, name: string): async.IAsyncRequest<any> {\r\n            var reqUri = moduleName + '/' + name;\r\n            return async.create((resolve, reject) => {\r\n                (<Function>require)([reqUri], (rootModule) => {\r\n                    resolve(rootModule);\r\n                }, (err) => reject(new DirLoadError(reqUri, err)));\r\n            });\r\n        }\r\n\r\n        resolveType (moduleName: string, name: string, /* out */oresolve: IOutType): boolean {\r\n            oresolve.isPrimitive = false;\r\n            oresolve.type = require(moduleName + '/' + name);\r\n            return oresolve.type !== undefined;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export class Enum {\r\n        constructor (public Object: any) {\r\n        }\r\n\r\n        static fromAny<T>(enuType: any, val: any, fallback?: number): number {\r\n            if (typeof val === \"number\")\r\n                return val;\r\n            if (!val)\r\n                return (fallback || 0);\r\n            var obj = enuType[val.toString()];\r\n            return (obj == null) ? (fallback || 0) : obj;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export interface IEventArgs {\r\n    }\r\n    export interface IEventCallback<T extends IEventArgs> {\r\n        (sender: any, args: T);\r\n    }\r\n\r\n    export class Event<T extends IEventArgs> {\r\n        private $$callbacks: IEventCallback<T>[] = [];\r\n        private $$scopes: any[] = [];\r\n\r\n        get has (): boolean {\r\n            return this.$$callbacks.length > 0;\r\n        }\r\n\r\n        on (callback: IEventCallback<T>, scope: any) {\r\n            this.$$callbacks.push(callback);\r\n            this.$$scopes.push(scope);\r\n        }\r\n\r\n        off (callback: IEventCallback<T>, scope: any) {\r\n            var cbs = this.$$callbacks;\r\n            var scopes = this.$$scopes;\r\n            var search = cbs.length - 1;\r\n            while (search > -1) {\r\n                search = cbs.lastIndexOf(callback, search);\r\n                if (scopes[search] === scope) {\r\n                    cbs.splice(search, 1);\r\n                    scopes.splice(search, 1);\r\n                }\r\n                search--;\r\n            }\r\n        }\r\n\r\n        raise (sender: any, args: T) {\r\n            for (var i = 0, cbs = this.$$callbacks.slice(0), scopes = this.$$scopes.slice(0), len = cbs.length; i < len; i++) {\r\n                cbs[i].call(scopes[i], sender, args);\r\n            }\r\n        }\r\n\r\n        raiseAsync (sender: any, args: T) {\r\n            window.setTimeout(() => this.raise(sender, args), 1);\r\n        }\r\n    }\r\n}",null,"module nullstone {\r\n    export interface IInterfaceDeclaration<T> {\r\n        name: string;\r\n        is(o: any): boolean;\r\n        as(o: any): T;\r\n        mark(type: any): IInterfaceDeclaration<T>;\r\n    }\r\n    export class Interface<T> implements IInterfaceDeclaration<T> {\r\n        name: string;\r\n\r\n        constructor (name: string) {\r\n            Object.defineProperty(this, \"name\", {value: name, writable: false});\r\n        }\r\n\r\n        is (o: any): boolean {\r\n            if (!o)\r\n                return false;\r\n            var type = o.constructor;\r\n            while (type) {\r\n                var is: IInterfaceDeclaration<any>[] = type.$$interfaces;\r\n                if (is && is.indexOf(this) > -1)\r\n                    return true;\r\n                type = getTypeParent(type);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        as (o: any): T {\r\n            if (!this.is(o))\r\n                return undefined;\r\n            return <T>o;\r\n        }\r\n\r\n        mark (type: any): Interface<T> {\r\n            addTypeInterfaces(type, this);\r\n            return this;\r\n        }\r\n    }\r\n}","/// <reference path=\"Interface\" />\r\n\r\nmodule nullstone {\r\n    export interface ICollection<T> extends IEnumerable<T> {\r\n        Count: number;\r\n        GetValueAt(index: number): T;\r\n        SetValueAt(index: number, value: T);\r\n        Insert(index: number, value: T);\r\n        Add(value: T);\r\n        Remove(value: T): boolean;\r\n        RemoveAt(index: number);\r\n        Clear();\r\n    }\r\n    export var ICollection_ = new Interface<ICollection<any>>(\"ICollection\");\r\n}","module nullstone {\r\n    export interface IEnumerable<T> {\r\n        getEnumerator(isReverse?: boolean): IEnumerator<T>;\r\n    }\r\n    export interface IEnumerableDeclaration<T> extends IInterfaceDeclaration<T> {\r\n        empty: IEnumerable<T>;\r\n        fromArray(arr: T[]): IEnumerable<T>;\r\n        toArray(en: IEnumerable<T>): T[];\r\n    }\r\n    export var IEnumerable_ = <IEnumerableDeclaration<any>>new Interface(\"IEnumerable\");\r\n    IEnumerable_.is = (o: any): boolean => {\r\n        return o && o.getEnumerator && typeof o.getEnumerator === \"function\";\r\n    };\r\n\r\n    IEnumerable_.empty = {\r\n        getEnumerator: function<T>(isReverse?: boolean): IEnumerator<T> {\r\n            return IEnumerator_.empty;\r\n        }\r\n    };\r\n\r\n    IEnumerable_.fromArray = function<T>(arr: T[]): IEnumerable<T> {\r\n        return {\r\n            $$arr: arr,\r\n            getEnumerator (isReverse?: boolean): IEnumerator<T> {\r\n                return IEnumerator_.fromArray(this.$$arr, isReverse);\r\n            }\r\n        };\r\n    };\r\n\r\n    IEnumerable_.toArray = function<T>(en: IEnumerable<T>): T[] {\r\n        var a: T[] = [];\r\n        for (var e = en.getEnumerator(); e.moveNext();) {\r\n            a.push(e.current);\r\n        }\r\n        return a;\r\n    }\r\n}","module nullstone {\r\n    export interface IEnumerator<T> {\r\n        current: T;\r\n        moveNext(): boolean;\r\n    }\r\n    export interface IEnumeratorDeclaration<T> extends IInterfaceDeclaration<T> {\r\n        empty: IEnumerator<T>;\r\n        fromArray(arr: T[], isReverse?: boolean):IEnumerator<T>;\r\n    }\r\n    export var IEnumerator_ = <IEnumeratorDeclaration<any>>new Interface(\"IEnumerator\");\r\n\r\n    IEnumerator_.empty = {\r\n        current: undefined,\r\n        moveNext (): boolean {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    IEnumerator_.fromArray = function<T> (arr: T[], isReverse?: boolean): IEnumerator<T> {\r\n        var len = arr.length;\r\n        var e = <IEnumerator<T>>{moveNext: undefined, current: undefined};\r\n        var index;\r\n        if (isReverse) {\r\n            index = len;\r\n            e.moveNext = function () {\r\n                index--;\r\n                if (index < 0) {\r\n                    e.current = undefined;\r\n                    return false;\r\n                }\r\n                e.current = arr[index];\r\n                return true;\r\n            };\r\n        } else {\r\n            index = -1;\r\n            e.moveNext = function () {\r\n                index++;\r\n                if (index >= len) {\r\n                    e.current = undefined;\r\n                    return false;\r\n                }\r\n                e.current = arr[index];\r\n                return true;\r\n            };\r\n        }\r\n        return e;\r\n    };\r\n}","module nullstone {\r\n    export interface IIndexedPropertyInfo {\r\n        getValue(obj: any, index: number): any;\r\n        setValue(obj: any, index: number, value: any);\r\n    }\r\n\r\n    export class IndexedPropertyInfo implements IIndexedPropertyInfo {\r\n        GetFunc: (index: number) => any;\r\n        SetFunc: (index: number, value: any) => any;\r\n\r\n        get propertyType (): Function {\r\n            //NotImplemented\r\n            return undefined;\r\n        }\r\n\r\n        getValue (ro: any, index: number): any {\r\n            if (this.GetFunc)\r\n                return this.GetFunc.call(ro, index);\r\n        }\r\n\r\n        setValue (ro: any, index: number, value: any) {\r\n            if (this.SetFunc)\r\n                this.SetFunc.call(ro, index, value);\r\n        }\r\n\r\n        static find (typeOrObj): IndexedPropertyInfo {\r\n            var o = typeOrObj;\r\n            var isType = typeOrObj instanceof Function;\r\n            if (isType)\r\n                o = new typeOrObj();\r\n\r\n            if (o instanceof Array) {\r\n                var pi = new IndexedPropertyInfo();\r\n                pi.GetFunc = function (index) {\r\n                    return this[index];\r\n                };\r\n                pi.SetFunc = function (index, value) {\r\n                    this[index] = value;\r\n                };\r\n                return pi;\r\n            }\r\n            var coll = ICollection_.as(o);\r\n            if (coll) {\r\n                var pi = new IndexedPropertyInfo();\r\n                pi.GetFunc = function (index) {\r\n                    return this.GetValueAt(index);\r\n                };\r\n                pi.SetFunc = function (index, value) {\r\n                    return this.SetValueAt(index, value);\r\n                };\r\n                return pi;\r\n            }\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export interface ILibrary {\r\n        name: string;\r\n        uri: Uri;\r\n        sourcePath: string;\r\n        useMin: boolean;\r\n        exports: string;\r\n        deps: string[];\r\n        rootModule: any;\r\n        loadAsync (): async.IAsyncRequest<Library>;\r\n        resolveType (moduleName: string, name: string, /* out */oresolve: IOutType): boolean;\r\n\r\n        add (type: any, name?: string): ILibrary;\r\n        addPrimitive (type: any, name?: string): ILibrary;\r\n        addEnum (enu: any, name: string): ILibrary;\r\n    }\r\n    export class Library implements ILibrary {\r\n        private $$module: any = null;\r\n        private $$sourcePath: string = null;\r\n\r\n        private $$primtypes: any = {};\r\n        private $$types: any = {};\r\n\r\n        private $$loaded = false;\r\n\r\n        name: string;\r\n        uri: Uri;\r\n        exports: string;\r\n        deps: string[];\r\n        useMin: boolean;\r\n\r\n        get sourcePath (): string {\r\n            var base = this.$$sourcePath || 'lib/' + this.name + '/dist/' + this.name;\r\n            if (!this.useMin)\r\n                return base;\r\n            return base + \".min\";\r\n        }\r\n\r\n        set sourcePath (value: string) {\r\n            if (value.substr(value.length - 3) === '.js')\r\n                value = value.substr(0, value.length - 3);\r\n            if (this.useMin && value.substr(value.length - 4) === \".min\")\r\n                value = value.substr(0, value.length - 4);\r\n            this.$$sourcePath = value;\r\n        }\r\n\r\n        constructor (name: string) {\r\n            Object.defineProperty(this, \"name\", {value: name, writable: false});\r\n            var uri = name;\r\n            if (name.indexOf(\"http://\") !== 0)\r\n                uri = \"lib://\" + name;\r\n            Object.defineProperty(this, \"uri\", {value: new Uri(uri), writable: false});\r\n        }\r\n\r\n        get rootModule (): any {\r\n            return this.$$module = this.$$module || require(this.sourcePath);\r\n        }\r\n\r\n        loadAsync (): async.IAsyncRequest<Library> {\r\n            //NOTE: If using http library scheme and a custom source path was not set, we assume the library is preloaded\r\n            if (!this.$$sourcePath && this.uri.scheme === \"http\")\r\n                this.$$loaded = true;\r\n            if (this.$$loaded)\r\n                return async.resolve(this);\r\n            this.$configModule();\r\n            return async.create((resolve, reject) => {\r\n                (<Function>require)([this.name], (rootModule) => {\r\n                    this.$$module = rootModule;\r\n                    this.$$loaded = true;\r\n                    resolve(this);\r\n                }, (err) => reject(new LibraryLoadError(this, err)));\r\n            });\r\n        }\r\n\r\n        private $configModule () {\r\n            var co = <RequireConfig>{\r\n                paths: {},\r\n                shim: {},\r\n                map: {\r\n                    \"*\": {}\r\n                }\r\n            };\r\n            var srcPath = this.sourcePath;\r\n            co.paths[this.name] = srcPath;\r\n            co.shim[this.name] = {\r\n                exports: this.exports,\r\n                deps: this.deps\r\n            };\r\n            co.map['*'][srcPath] = this.name;\r\n            require.config(co);\r\n        }\r\n\r\n        resolveType (moduleName: string, name: string, /* out */oresolve: IOutType): boolean {\r\n            if (!moduleName) {\r\n                //Library URI: http://.../\r\n                oresolve.isPrimitive = true;\r\n                if ((oresolve.type = this.$$primtypes[name]) !== undefined)\r\n                    return true;\r\n                oresolve.isPrimitive = false;\r\n                return (oresolve.type = this.$$types[name]) !== undefined;\r\n            }\r\n\r\n            //Library URI: lib://.../\r\n            var curModule = this.rootModule;\r\n            oresolve.isPrimitive = false;\r\n            oresolve.type = undefined;\r\n            if (moduleName !== \"/\") {\r\n                for (var i = 0, tokens = moduleName.substr(1).split('.'); i < tokens.length && !!curModule; i++) {\r\n                    curModule = curModule[tokens[i]];\r\n                }\r\n            }\r\n            if (!curModule)\r\n                return false;\r\n            oresolve.type = curModule[name];\r\n            var type = oresolve.type;\r\n            if (type === undefined)\r\n                return false;\r\n            setTypeUri(type, this.uri);\r\n            return true;\r\n        }\r\n\r\n        add (type: any, name?: string): ILibrary {\r\n            if (!type)\r\n                throw new Error(\"A type must be specified when registering '\" + name + \"'`.\");\r\n            name = name || getTypeName(type);\r\n            if (!name)\r\n                throw new Error(\"No type name found.\");\r\n            setTypeUri(type, this.uri);\r\n            this.$$types[name] = type;\r\n            return this;\r\n        }\r\n\r\n        addPrimitive (type: any, name?: string): ILibrary {\r\n            if (!type)\r\n                throw new Error(\"A type must be specified when registering '\" + name + \"'`.\");\r\n            name = name || getTypeName(type);\r\n            if (!name)\r\n                throw new Error(\"No type name found.\");\r\n            setTypeUri(type, this.uri);\r\n            this.$$primtypes[name] = type;\r\n            return this;\r\n        }\r\n\r\n        addEnum (enu: any, name: string): ILibrary {\r\n            this.addPrimitive(enu, name);\r\n            Object.defineProperty(enu, \"$$enum\", {value: true, writable: false});\r\n            enu.name = name;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function setTypeUri (type: any, uri: Uri) {\r\n        if (type.$$uri)\r\n            return;\r\n        Object.defineProperty(type, \"$$uri\", {value: uri.toString(), enumerable: false});\r\n    }\r\n}","module nullstone {\r\n    interface ILibraryHash {\r\n        [id:string]: ILibrary;\r\n    }\r\n    export interface ILibraryResolver extends ITypeResolver {\r\n        libraryCreated: Event<IEventArgs>;\r\n        loadTypeAsync(uri: string, name: string): async.IAsyncRequest<any>;\r\n        resolve(uri: string): ILibrary;\r\n    }\r\n\r\n    export interface ILibraryCreatedEventArgs extends IEventArgs {\r\n        library: ILibrary;\r\n    }\r\n\r\n    //NOTE:\r\n    //  Library Uri syntax\r\n    //      http://...\r\n    //      lib://<library>[/<namespace>]\r\n    //      <dir>\r\n    export class LibraryResolver implements ILibraryResolver {\r\n        private $$libs: ILibraryHash = {};\r\n\r\n        libraryCreated = new Event();\r\n\r\n        dirResolver = new DirResolver();\r\n\r\n        createLibrary (uri: string): ILibrary {\r\n            return new Library(uri);\r\n        }\r\n\r\n        loadTypeAsync (uri: string, name: string): async.IAsyncRequest<any> {\r\n            var lib = this.resolve(uri);\r\n            if (!lib)\r\n                return this.dirResolver.loadAsync(uri, name);\r\n            return async.create((resolve, reject) => {\r\n                lib.loadAsync()\r\n                    .then((lib) => {\r\n                        var oresolve = {isPrimitive: false, type: undefined};\r\n                        if (lib.resolveType(null, name, oresolve))\r\n                            resolve(oresolve.type);\r\n                        else\r\n                            resolve(null);\r\n                    }, reject);\r\n            });\r\n        }\r\n\r\n        resolve (uri: string): ILibrary {\r\n            var libUri = new Uri(uri);\r\n            var scheme = libUri.scheme;\r\n            if (!scheme)\r\n                return null;\r\n\r\n            var libName = (scheme === \"lib\") ? libUri.host : uri;\r\n            var lib = this.$$libs[libName];\r\n            if (!lib) {\r\n                lib = this.$$libs[libName] = this.createLibrary(libName);\r\n                this.$$onLibraryCreated(lib);\r\n            }\r\n            return lib;\r\n        }\r\n\r\n        resolveType (uri: string, name: string, /* out */oresolve: IOutType): boolean {\r\n            var libUri = new Uri(uri);\r\n            var scheme = libUri.scheme;\r\n            if (!scheme)\r\n                return this.dirResolver.resolveType(uri, name, oresolve);\r\n\r\n            var libName = (scheme === \"lib\") ? libUri.host : uri;\r\n            var modName = (scheme === \"lib\") ? libUri.absolutePath : \"\";\r\n            var lib = this.$$libs[libName];\r\n            if (!lib) {\r\n                lib = this.$$libs[libName] = this.createLibrary(libName);\r\n                this.$$onLibraryCreated(lib);\r\n            }\r\n            return lib.resolveType(modName, name, oresolve);\r\n        }\r\n\r\n        private $$onLibraryCreated (lib: ILibrary) {\r\n            this.libraryCreated.raise(this, Object.freeze({library: lib}));\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export class Memoizer<T> {\r\n        private $$creator: (key: string) => T;\r\n        private $$cache: any = {};\r\n\r\n        constructor (creator: (key: string) => T) {\r\n            this.$$creator = creator;\r\n        }\r\n\r\n        memoize (key: string): T {\r\n            var obj = this.$$cache[key];\r\n            if (!obj)\r\n                this.$$cache[key] = obj = this.$$creator(key);\r\n            return obj;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export function getPropertyDescriptor (obj: any, name: string): PropertyDescriptor {\r\n        if (!obj)\r\n            return undefined;\r\n        var type: Function = (<any>obj).constructor;\r\n        var propDesc = Object.getOwnPropertyDescriptor(type.prototype, name);\r\n        if (propDesc)\r\n            return propDesc;\r\n        return Object.getOwnPropertyDescriptor(obj, name);\r\n    }\r\n\r\n    export function hasProperty (obj: any, name: string): boolean {\r\n        if (!obj)\r\n            return false;\r\n        if (obj.hasOwnProperty(name))\r\n            return true;\r\n        var type = obj.constructor;\r\n        return type.prototype.hasOwnProperty(name);\r\n    }\r\n}","module nullstone {\r\n    export interface IPropertyInfo {\r\n        name: string;\r\n        getValue(obj: any): any;\r\n        setValue(obj: any, value: any);\r\n    }\r\n\r\n    export class PropertyInfo implements IPropertyInfo {\r\n        private $$getFunc: () => any;\r\n        private $$setFunc: (value: any) => any;\r\n\r\n        name: string;\r\n\r\n        getValue (obj: any): any {\r\n            if (this.$$getFunc)\r\n                return this.$$getFunc.call(obj);\r\n        }\r\n\r\n        setValue (obj: any, value: any) {\r\n            if (this.$$setFunc)\r\n                return this.$$setFunc.call(obj, value);\r\n        }\r\n\r\n        static find (typeOrObj: any, name: string): IPropertyInfo {\r\n            var o = typeOrObj;\r\n            var isType = typeOrObj instanceof Function;\r\n            if (isType)\r\n                o = new typeOrObj();\r\n\r\n            if (!(o instanceof Object))\r\n                return null;\r\n\r\n            var nameClosure = name;\r\n            var propDesc = getPropertyDescriptor(o, name);\r\n            if (propDesc) {\r\n                var pi = new PropertyInfo();\r\n                pi.name = name;\r\n                pi.$$getFunc = propDesc.get;\r\n                if (!pi.$$getFunc)\r\n                    pi.$$getFunc = function () {\r\n                        return this[nameClosure];\r\n                    };\r\n                pi.$$setFunc = propDesc.set;\r\n                if (!pi.$$setFunc && propDesc.writable)\r\n                    pi.$$setFunc = function (value) {\r\n                        this[nameClosure] = value;\r\n                    };\r\n                return pi;\r\n            }\r\n\r\n            var type = isType ? typeOrObj : typeOrObj.constructor;\r\n            var pi = new PropertyInfo();\r\n            pi.name = name;\r\n            pi.$$getFunc = type.prototype[\"Get\" + name];\r\n            pi.$$setFunc = type.prototype[\"Set\" + name];\r\n            return pi;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export function getTypeName (type: Function): string {\r\n        var t = <any>type;\r\n        if (!t)\r\n            return \"\";\r\n        var name = t.name;\r\n        if (name)\r\n            return name;\r\n        var name = t.toString().match(/function ([^\\(]+)/)[1];\r\n        Object.defineProperty(t, \"name\", {enumerable: false, value: name, writable: false});\r\n        return name;\r\n    }\r\n\r\n    export function getTypeParent (type: Function): Function {\r\n        if (type === Object)\r\n            return null;\r\n        var p = (<any>type).$$parent;\r\n        if (!p) {\r\n            if (!type.prototype)\r\n                return undefined;\r\n            p = <Function>Object.getPrototypeOf(type.prototype).constructor;\r\n            Object.defineProperty(type, \"$$parent\", {value: p, writable: false});\r\n        }\r\n        return p;\r\n    }\r\n\r\n    export function addTypeInterfaces (type: Function, ...interfaces: IInterfaceDeclaration<any>[]) {\r\n        if (!interfaces)\r\n            return;\r\n        for (var j = 0, len = interfaces.length; j < len; j++) {\r\n            if (!interfaces[j]) {\r\n                console.warn(\"Registering undefined interface on type.\", type);\r\n                break;\r\n            }\r\n        }\r\n        Object.defineProperty(type, \"$$interfaces\", {value: interfaces, writable: false});\r\n    }\r\n\r\n    export function doesInheritFrom (t: Function, type: any): boolean {\r\n        var temp = <Function><any>t;\r\n        while (temp && temp !== type) {\r\n            temp = getTypeParent(temp);\r\n        }\r\n        return temp != null;\r\n    }\r\n}","module nullstone {\r\n    var converters: any = [];\r\n    converters[<any>Boolean] = function (val: any): boolean {\r\n        if (val == null)\r\n            return null;\r\n        if (typeof val === \"boolean\")\r\n            return val;\r\n        var c = val.toString().toUpperCase();\r\n        return c === \"TRUE\" ? true : (c === \"FALSE\" ? false : null);\r\n    };\r\n    converters[<any>String] = function (val: any): String {\r\n        if (val == null) return \"\";\r\n        return val.toString();\r\n    };\r\n    converters[<any>Number] = function (val: any): Number {\r\n        if (!val) return 0;\r\n        if (typeof val === \"number\")\r\n            return val;\r\n        return parseFloat(val.toString());\r\n    };\r\n    converters[<any>Date] = function (val: any): Date {\r\n        if (val == null)\r\n            return new Date(0);\r\n        return new Date(val.toString());\r\n    };\r\n    converters[<any>RegExp] = function (val: any): RegExp {\r\n        if (val instanceof RegExp)\r\n            return val;\r\n        if (val = null)\r\n            throw new Error(\"Cannot specify an empty RegExp.\");\r\n        val = val.toString();\r\n        return new RegExp(val);\r\n    };\r\n\r\n    export function convertAnyToType (val: any, type: Function): any {\r\n        var converter: (val: any) => any = (<any>converters)[<any>type];\r\n        if (converter)\r\n            return converter(val);\r\n        if (type instanceof Enum) {\r\n            var enumo = (<Enum><any>type).Object;\r\n            if (enumo.Converter)\r\n                return enumo.Converter(val);\r\n            val = val || 0;\r\n            if (typeof val === \"string\")\r\n                return enumo[val];\r\n            return val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    export function convertStringToEnum<T> (val: string, en: any): T {\r\n        if (!val)\r\n            return <T><any>0;\r\n        return <T>en[val];\r\n    }\r\n\r\n    export function registerTypeConverter (type: Function, converter: (val: any) => any) {\r\n        converters[<any>type] = converter;\r\n    }\r\n\r\n    export function registerEnumConverter (e: any, converter: (val: any) => any) {\r\n        e.Converter = converter;\r\n    }\r\n}","/// <reference path=\"conversion\" />\r\n\r\nmodule nullstone {\r\n    export enum UriKind {\r\n        RelativeOrAbsolute = 0,\r\n        Absolute = 1,\r\n        Relative = 2\r\n    }\r\n    export class Uri {\r\n        private $$originalString: string;\r\n        private $$kind: UriKind;\r\n\r\n        constructor (uri: Uri);\r\n        constructor (uri: string, kind?: UriKind);\r\n        constructor (uri?: any, kind?: UriKind) {\r\n            if (typeof uri === \"string\") {\r\n                this.$$originalString = uri;\r\n                this.$$kind = kind || UriKind.RelativeOrAbsolute;\r\n            } else if (uri instanceof Uri) {\r\n                this.$$originalString = (<Uri>uri).$$originalString;\r\n                this.$$kind = (<Uri>uri).$$kind;\r\n            }\r\n        }\r\n\r\n        get kind (): UriKind {\r\n            return this.$$kind;\r\n        }\r\n\r\n        get host (): string {\r\n            var s = this.$$originalString;\r\n            var ind = Math.max(3, s.indexOf(\"://\") + 3);\r\n            var end = s.indexOf(\"/\", ind);\r\n            //TODO: Strip port\r\n            return (end < 0) ? s.substr(ind) : s.substr(ind, end - ind);\r\n        }\r\n\r\n        get absolutePath (): string {\r\n            var s = this.$$originalString;\r\n            var ind = Math.max(3, s.indexOf(\"://\") + 3);\r\n            var start = s.indexOf(\"/\", ind);\r\n            if (start < 0 || start < ind)\r\n                return \"/\";\r\n            var qstart = s.indexOf(\"?\", start);\r\n            if (qstart < 0 || qstart < start)\r\n                return s.substr(start);\r\n            return s.substr(start, qstart - start);\r\n        }\r\n\r\n        get scheme (): string {\r\n            var s = this.$$originalString;\r\n            var ind = s.indexOf(\"://\");\r\n            if (ind < 0)\r\n                return null;\r\n            return s.substr(0, ind);\r\n        }\r\n\r\n        get fragment (): string {\r\n            var s = this.$$originalString;\r\n            var ind = s.indexOf(\"#\");\r\n            if (ind < 0)\r\n                return \"\";\r\n            return s.substr(ind);\r\n        }\r\n\r\n        get originalString (): string {\r\n            return this.$$originalString.toString();\r\n        }\r\n\r\n        toString (): string {\r\n            return this.$$originalString.toString();\r\n        }\r\n\r\n        equals (other: Uri): boolean {\r\n            return this.$$originalString === other.$$originalString;\r\n        }\r\n\r\n        static isNullOrEmpty (uri: Uri): boolean {\r\n            if (uri == null)\r\n                return true;\r\n            return !uri.$$originalString;\r\n        }\r\n    }\r\n    registerTypeConverter(Uri, (val: any): any => {\r\n        if (val == null)\r\n            val = \"\";\r\n        return new Uri(val.toString());\r\n    });\r\n}","/// <reference path=\"Uri\" />\r\n\r\nmodule nullstone {\r\n    export interface IOutType {\r\n        type: any;\r\n        isPrimitive: boolean;\r\n    }\r\n\r\n    export interface ITypeManager {\r\n        defaultUri: string;\r\n        xUri: string;\r\n        resolveLibrary (uri: string): ILibrary;\r\n        loadTypeAsync (uri: string, name: string): async.IAsyncRequest<any>;\r\n        resolveType(uri: string, name: string, /* out */oresolve: IOutType): boolean;\r\n        add (uri: string, name: string, type: any): ITypeManager;\r\n        addPrimitive (uri: string, name: string, type: any): ITypeManager;\r\n        addEnum (uri: string, name: string, enu: any): ITypeManager;\r\n    }\r\n    export class TypeManager implements ITypeManager {\r\n        libResolver: ILibraryResolver = new LibraryResolver();\r\n\r\n        constructor (public defaultUri: string, public xUri: string) {\r\n            this.libResolver.resolve(defaultUri)\r\n                .add(Array, \"Array\");\r\n\r\n            this.libResolver.resolve(xUri)\r\n                .addPrimitive(String, \"String\")\r\n                .addPrimitive(Number, \"Number\")\r\n                .addPrimitive(Number, \"Double\")\r\n                .addPrimitive(Date, \"Date\")\r\n                .addPrimitive(RegExp, \"RegExp\")\r\n                .addPrimitive(Boolean, \"Boolean\")\r\n                .addPrimitive(Uri, \"Uri\");\r\n        }\r\n\r\n        resolveLibrary (uri: string): ILibrary {\r\n            return this.libResolver.resolve(uri || this.defaultUri);\r\n        }\r\n\r\n        loadTypeAsync (uri: string, name: string): async.IAsyncRequest<any> {\r\n            return this.libResolver.loadTypeAsync(uri || this.defaultUri, name);\r\n        }\r\n\r\n        resolveType (uri: string, name: string, /* out */oresolve: IOutType): boolean {\r\n            oresolve.isPrimitive = false;\r\n            oresolve.type = undefined;\r\n            return this.libResolver.resolveType(uri || this.defaultUri, name, oresolve);\r\n        }\r\n\r\n        add (uri: string, name: string, type: any): ITypeManager {\r\n            var lib = this.libResolver.resolve(uri || this.defaultUri);\r\n            if (lib)\r\n                lib.add(type, name);\r\n            return this;\r\n        }\r\n\r\n        addPrimitive (uri: string, name: string, type: any): ITypeManager {\r\n            var lib = this.libResolver.resolve(uri || this.defaultUri);\r\n            if (lib)\r\n                lib.addPrimitive(type, name);\r\n            return this;\r\n        }\r\n\r\n        addEnum (uri: string, name: string, enu: any): ITypeManager {\r\n            var lib = this.libResolver.resolve(uri || this.defaultUri);\r\n            if (lib)\r\n                lib.addEnum(enu, name);\r\n            return this;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    interface AnnotatedType extends Function {\r\n        $$annotations: any[][];\r\n    }\r\n\r\n    export function Annotation (type: Function, name: string, value: any, forbidMultiple?: boolean) {\r\n        var at = <AnnotatedType>type;\r\n        var anns: any[][] = at.$$annotations;\r\n        if (!anns)\r\n            Object.defineProperty(at, \"$$annotations\", {value: (anns = []), writable: false});\r\n        var ann: any[] = anns[name];\r\n        if (!ann)\r\n            anns[name] = ann = [];\r\n        if (forbidMultiple && ann.length > 0)\r\n            throw new Error(\"Only 1 '\" + name + \"' annotation allowed per type [\" + getTypeName(type) + \"].\");\r\n        ann.push(value);\r\n    }\r\n\r\n    export function GetAnnotations (type: Function, name: string): any[] {\r\n        var at = <AnnotatedType>type;\r\n        var anns: any[][] = at.$$annotations;\r\n        if (!anns)\r\n            return undefined;\r\n        return (anns[name] || []).slice(0);\r\n    }\r\n\r\n    export interface ITypedAnnotation<T> {\r\n        (type: Function, ...values: T[]);\r\n        Get(type: Function): T[];\r\n    }\r\n    export function CreateTypedAnnotation<T>(name: string): ITypedAnnotation<T> {\r\n        function ta (type: Function, ...values: T[]) {\r\n            for (var i = 0, len = values.length; i < len; i++) {\r\n                Annotation(type, name, values[i]);\r\n            }\r\n        }\r\n\r\n        (<any>ta).Get = function (type: Function): T[] {\r\n            return GetAnnotations(type, name);\r\n        };\r\n        return <ITypedAnnotation<T>>ta;\r\n    }\r\n}","module nullstone.async {\r\n    export interface IAsyncRequest<T> {\r\n        then(success: (result: T) => any, errored?: (error: any) => any): IAsyncRequest<T>;\r\n    }\r\n    export interface IAsyncResolution<T> {\r\n        (resolve: (result: T) => any, reject: (error: any) => any);\r\n    }\r\n\r\n    export function create <T>(resolution: IAsyncResolution<T>): IAsyncRequest<T> {\r\n        var onSuccess: (result: T)=>any;\r\n        var onError: (error: any)=>any;\r\n\r\n        var resolvedResult: any;\r\n\r\n        function resolve (result: T) {\r\n            resolvedResult = result;\r\n            onSuccess && onSuccess(result);\r\n        }\r\n\r\n        var resolvedError: any;\r\n\r\n        function reject (error: any) {\r\n            resolvedError = error;\r\n            onError && onError(error);\r\n        }\r\n\r\n        resolution(resolve, reject);\r\n\r\n        var req = <IAsyncRequest<T>>{\r\n            then: function (success: (result: T) => any, errored?: (error: any) => any): IAsyncRequest<T> {\r\n                onSuccess = success;\r\n                onError = errored;\r\n                if (resolvedResult !== undefined)\r\n                    onSuccess && onSuccess(resolvedResult);\r\n                else if (resolvedError !== undefined)\r\n                    onError && onError(resolvedError);\r\n                return req;\r\n            }\r\n        };\r\n        return req;\r\n    }\r\n\r\n    export function resolve<T>(obj: T): IAsyncRequest<T> {\r\n        return async.create<T>((resolve, reject) => {\r\n            resolve(obj);\r\n        });\r\n    }\r\n\r\n    export function reject<T>(err: any): IAsyncRequest<T> {\r\n        return async.create<T>((resolve, reject) => {\r\n            reject(err);\r\n        });\r\n    }\r\n\r\n    export function many<T>(arr: IAsyncRequest<T>[]): IAsyncRequest<T[]> {\r\n        if (!arr || arr.length < 1)\r\n            return resolve<T[]>([]);\r\n\r\n        return create((resolve, reject) => {\r\n            var resolves: T[] = new Array(arr.length);\r\n            var errors: any[] = new Array(arr.length);\r\n            var finished = 0;\r\n            var count = arr.length;\r\n            var anyerrors = false;\r\n\r\n            function completeSingle (i: number, res: T, err: any) {\r\n                resolves[i] = res;\r\n                errors[i] = err;\r\n                anyerrors = anyerrors || err !== undefined;\r\n                finished++;\r\n                if (finished >= count)\r\n                    anyerrors ? reject(new AggregateError(errors)) : resolve(resolves);\r\n            }\r\n\r\n            for (var i = 0; i < count; i++) {\r\n                arr[i].then(resi => completeSingle(i, resi, undefined),\r\n                        erri => completeSingle(i, undefined, erri));\r\n            }\r\n        });\r\n    }\r\n}","module nullstone {\r\n    //TODO: Check instances in Fayde .Equals\r\n    export function equals (val1: any, val2: any): boolean {\r\n        if (val1 == null && val2 == null)\r\n            return true;\r\n        if (val1 == null || val2 == null)\r\n            return false;\r\n        if (val1 === val2)\r\n            return true;\r\n        return !!val1.equals && val1.equals(val2);\r\n    }\r\n}","module nullstone {\r\n    export class AggregateError {\r\n        errors: any[];\r\n\r\n        constructor (errors: any[]) {\r\n            this.errors = errors.filter(e => !!e);\r\n            Object.freeze(this);\r\n        }\r\n\r\n        get flat (): any[] {\r\n            var flat: any[] = [];\r\n            for (var i = 0, errs = this.errors; i < errs.length; i++) {\r\n                var err = errs[i];\r\n                if (err instanceof AggregateError) {\r\n                    flat = flat.concat((<AggregateError>err).flat);\r\n                } else {\r\n                    flat.push(err);\r\n                }\r\n            }\r\n            return flat;\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export class DirLoadError {\r\n        constructor (public path: string, public error: any) {\r\n            Object.freeze(this);\r\n        }\r\n    }\r\n}","module nullstone {\r\n    export class LibraryLoadError {\r\n        constructor (public library: Library, public error: Error) {\r\n            Object.freeze(this);\r\n        }\r\n    }\r\n}","module nullstone.markup {\r\n    export interface IMarkupExtension {\r\n        init(val: string);\r\n        resolveTypeFields?(resolver: (full: string) => any);\r\n        transmute?(os: any[]): any;\r\n    }\r\n\r\n    export function finishMarkupExtension (me: IMarkupExtension, prefixResolver: INsPrefixResolver, resolver: events.IResolveType, os: any[]): any {\r\n        if (!me)\r\n            return me;\r\n        if (typeof me.resolveTypeFields === \"function\") {\r\n            me.resolveTypeFields((full) => parseType(full, prefixResolver, resolver));\r\n        }\r\n        if (typeof me.transmute === \"function\") {\r\n            return me.transmute(os);\r\n        }\r\n        return me;\r\n    }\r\n\r\n    function parseType (full: string, prefixResolver: INsPrefixResolver, resolver: events.IResolveType) {\r\n        var prefix: string = null;\r\n        var name = full;\r\n        var ind = name.indexOf(\":\");\r\n        if (ind > -1) {\r\n            prefix = name.substr(0, ind);\r\n            name = name.substr(ind + 1);\r\n        }\r\n        var uri = prefixResolver.lookupNamespaceURI(prefix);\r\n        var ort = resolver(uri, name);\r\n        return ort.type;\r\n    }\r\n}","module nullstone.markup {\r\n    export interface IMarkupParser<T> {\r\n        on(listener: IMarkupSax<T>): IMarkupParser<T>\r\n        setNamespaces (defaultXmlns: string, xXmlns: string): IMarkupParser<T>;\r\n        setExtensionParser (parser: IMarkupExtensionParser): IMarkupParser<T>;\r\n        parse(root: T);\r\n        skipBranch();\r\n        resolvePrefix (prefix: string): string;\r\n        walkUpObjects (): IEnumerator<any>;\r\n    }\r\n    export var NO_PARSER: IMarkupParser<any> = {\r\n        on (listener: IMarkupSax<any>): IMarkupParser<any> {\r\n            return NO_PARSER;\r\n        },\r\n        setNamespaces (defaultXmlns: string, xXmlns: string): IMarkupParser<any> {\r\n            return NO_PARSER;\r\n        },\r\n        setExtensionParser (parser: IMarkupExtensionParser): IMarkupParser<any> {\r\n            return NO_PARSER;\r\n        },\r\n        parse (root: any) {\r\n        },\r\n        skipBranch (): any {\r\n        },\r\n        resolvePrefix (prefix: string): string {\r\n            return \"\";\r\n        },\r\n        walkUpObjects (): IEnumerator<any> {\r\n            return IEnumerator_.empty;\r\n        }\r\n    };\r\n\r\n\r\n    export interface IMarkupSax<T> {\r\n        resolveType?: events.IResolveType;\r\n        resolveObject?: events.IResolveObject;\r\n        resolvePrimitive?: events.IResolvePrimitive;\r\n        resolveResources?: events.IResolveResources;\r\n        branchSkip?: events.IBranchSkip<T>;\r\n        object?: events.IObject;\r\n        objectEnd?: events.IObjectEnd;\r\n        contentText?: events.IText;\r\n        name?: events.IName;\r\n        propertyStart?: events.IPropertyStart;\r\n        propertyEnd?: events.IPropertyEnd;\r\n        attributeStart?: events.IAttributeStart;\r\n        attributeEnd?: events.IAttributeEnd;\r\n        error?: events.IResumableError;\r\n        end?: () => any;\r\n    }\r\n\r\n    var oresolve: IOutType = {\r\n        isPrimitive: false,\r\n        type: Object\r\n    };\r\n\r\n    export function createMarkupSax<T> (listener: IMarkupSax<T>): IMarkupSax<T> {\r\n        return {\r\n            resolveType: listener.resolveType || ((uri, name) => oresolve),\r\n            resolveObject: listener.resolveObject || ((type) => new (type)()),\r\n            resolvePrimitive: listener.resolvePrimitive || ((type, text) => new (type)(text)),\r\n            resolveResources: listener.resolveResources || ((owner, ownerType) => new Object()),\r\n            branchSkip: listener.branchSkip || ((root, obj) => {\r\n            }),\r\n            object: listener.object || ((obj, isContent) => {\r\n            }),\r\n            objectEnd: listener.objectEnd || ((obj, isContent, prev) => {\r\n            }),\r\n            contentText: listener.contentText || ((text) => {\r\n            }),\r\n            name: listener.name || ((name) => {\r\n            }),\r\n            propertyStart: listener.propertyStart || ((ownerType, propName) => {\r\n            }),\r\n            propertyEnd: listener.propertyEnd || ((ownerType, propName) => {\r\n            }),\r\n            attributeStart: listener.attributeStart || ((ownerType, attrName) => {\r\n            }),\r\n            attributeEnd: listener.attributeEnd || ((ownerType, attrName, obj) => {\r\n            }),\r\n            error: listener.error || ((e) => true),\r\n            end: listener.end || (() => {\r\n            })\r\n        };\r\n    }\r\n}","module nullstone.markup {\r\n    export class Markup<T> {\r\n        uri: Uri;\r\n        root: T;\r\n\r\n        constructor (uri: string) {\r\n            this.uri = new Uri(uri);\r\n        }\r\n\r\n        createParser (): IMarkupParser<T> {\r\n            return NO_PARSER;\r\n        }\r\n\r\n        resolve (typemgr: ITypeManager, customCollector?: ICustomCollector): async.IAsyncRequest<any> {\r\n            var resolver = new MarkupDependencyResolver<T>(typemgr, this.createParser());\r\n            resolver.collect(this.root, customCollector);\r\n            return resolver.resolve();\r\n        }\r\n\r\n        loadAsync (): async.IAsyncRequest<Markup<T>> {\r\n            var reqUri = \"text!\" + this.uri.toString();\r\n            var md = this;\r\n            return async.create((resolve, reject) => {\r\n                (<Function>require)([reqUri], (data: string) => {\r\n                    md.setRoot(md.loadRoot(data));\r\n                    resolve(md);\r\n                }, reject);\r\n            });\r\n        }\r\n\r\n        loadRoot (data: string): T {\r\n            return <T><any>data;\r\n        }\r\n\r\n        setRoot (markup: T): Markup<T> {\r\n            this.root = markup;\r\n            return this;\r\n        }\r\n    }\r\n}","module nullstone.markup {\r\n    export interface ICustomCollector {\r\n        (ownerUri: string, ownerName: string, propName: string, val: any);\r\n    }\r\n    export interface IMarkupDependencyResolver<T> {\r\n        add(uri: string, name: string): boolean;\r\n        collect(root: T, customCollector?: ICustomCollector);\r\n        resolve(): async.IAsyncRequest<any>;\r\n    }\r\n    export class MarkupDependencyResolver<T> implements IMarkupDependencyResolver<T> {\r\n        private $$uris: string[] = [];\r\n        private $$names: string[] = [];\r\n        private $$resolving: string[] = [];\r\n\r\n        constructor (public typeManager: ITypeManager, public parser: IMarkupParser<T>) {\r\n        }\r\n\r\n        collect (root: T, customCollector?: ICustomCollector) {\r\n            //TODO: We need to collect\r\n            //  ResourceDictionary.Source\r\n            //  Application.ThemeName\r\n            var blank = {};\r\n            var oresolve: IOutType = {\r\n                isPrimitive: false,\r\n                type: Object\r\n            };\r\n            var last = {\r\n                uri: \"\",\r\n                name: \"\",\r\n                obj: undefined\r\n            };\r\n            var parse = {\r\n                resolveType: (uri, name) => {\r\n                    this.add(uri, name);\r\n                    last.uri = uri;\r\n                    last.name = name;\r\n                    return oresolve;\r\n                },\r\n                resolveObject: (type)=> {\r\n                    return blank;\r\n                },\r\n                objectEnd: (obj, isContent, prev) => {\r\n                    last.obj = obj;\r\n                },\r\n                propertyEnd: (ownerType, propName) => {\r\n                },\r\n                attributeEnd: (ownerType, attrName, obj) => {\r\n                }\r\n            };\r\n            if (customCollector) {\r\n                parse.propertyEnd = (ownerType, propName) => {\r\n                    customCollector(last.uri, last.name, propName, last.obj);\r\n                };\r\n                parse.attributeEnd = (ownerType, attrName, obj) => {\r\n                    customCollector(last.uri, last.name, attrName, obj);\r\n                };\r\n            }\r\n\r\n            this.parser\r\n                .on(parse)\r\n                .parse(root);\r\n        }\r\n\r\n        add (uri: string, name: string): boolean {\r\n            var uris = this.$$uris;\r\n            var names = this.$$names;\r\n            var ind = uris.indexOf(uri);\r\n            if (ind > -1 && names[ind] === name)\r\n                return false;\r\n            if (this.$$resolving.indexOf(uri + \"/\" + name) > -1)\r\n                return false;\r\n            uris.push(uri);\r\n            names.push(name);\r\n            return true;\r\n        }\r\n\r\n        resolve (): async.IAsyncRequest<any> {\r\n            var as: async.IAsyncRequest<any>[] = [];\r\n            for (var i = 0, uris = this.$$uris, names = this.$$names, tm = this.typeManager, resolving = this.$$resolving; i < uris.length; i++) {\r\n                var uri = uris[i];\r\n                var name = names[i];\r\n                resolving.push(uri + \"/\" + name);\r\n                as.push(tm.loadTypeAsync(uri, name));\r\n            }\r\n            return async.many(as);\r\n        }\r\n    }\r\n}","module nullstone.markup.xaml {\r\n    // Syntax:\r\n    //      {<Alias|Name> [<DefaultKey>=]<DefaultValue>|<Key>=<Value>}\r\n    // Examples:\r\n    //  {x:Null }\r\n    //  {x:Type }\r\n    //  {x:Static }\r\n    //  {TemplateBinding }\r\n    //  {Binding }\r\n    //  {StaticResource }\r\n\r\n    interface IParseContext {\r\n        text: string;\r\n        i: number;\r\n        acc: string;\r\n        error: any;\r\n        resolver: INsPrefixResolver;\r\n    }\r\n    export class XamlExtensionParser implements IMarkupExtensionParser {\r\n        private $$defaultXmlns = \"http://schemas.wsick.com/fayde\";\r\n        private $$xXmlns = \"http://schemas.wsick.com/fayde/x\";\r\n\r\n        private $$onResolveType: events.IResolveType;\r\n        private $$onResolveObject: events.IResolveObject;\r\n        private $$onResolvePrimitive: events.IResolvePrimitive;\r\n        private $$onError: events.IError;\r\n\r\n        setNamespaces (defaultXmlns: string, xXmlns: string): XamlExtensionParser {\r\n            this.$$defaultXmlns = defaultXmlns;\r\n            this.$$xXmlns = xXmlns;\r\n            return this;\r\n        }\r\n\r\n        parse (value: string, resolver: INsPrefixResolver, os: any[]): any {\r\n            if (!isAlpha(value[1]))\r\n                return value;\r\n            this.$$ensure();\r\n            var ctx: IParseContext = {\r\n                text: value,\r\n                i: 1,\r\n                acc: \"\",\r\n                error: \"\",\r\n                resolver: resolver\r\n            };\r\n            var obj = this.$$doParse(ctx, os);\r\n            if (ctx.error)\r\n                this.$$onError(ctx.error);\r\n            obj = finishMarkupExtension(obj, resolver, this.$$onResolveType, os);\r\n            return obj;\r\n        }\r\n\r\n        private $$doParse (ctx: IParseContext, os: any[]): any {\r\n            if (!this.$$parseName(ctx))\r\n                return undefined;\r\n            this.$$startExtension(ctx, os);\r\n\r\n            while (ctx.i < ctx.text.length) {\r\n                if (!this.$$parseKeyValue(ctx, os))\r\n                    break;\r\n                if (ctx.text[ctx.i] === \"}\") {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return os.pop();\r\n        }\r\n\r\n        private $$parseName (ctx: IParseContext): boolean {\r\n            var ind = ctx.text.indexOf(\" \", ctx.i);\r\n            if (ind > ctx.i) {\r\n                ctx.acc = ctx.text.substr(ctx.i, ind - ctx.i);\r\n                ctx.i = ind + 1;\r\n                return true;\r\n            }\r\n            ind = ctx.text.indexOf(\"}\", ctx.i);\r\n            if (ind > ctx.i) {\r\n                ctx.acc = ctx.text.substr(ctx.i, ind - ctx.i);\r\n                ctx.i = ind;\r\n                return true;\r\n            }\r\n            ctx.error = \"Missing closing bracket.\";\r\n            return false;\r\n        }\r\n\r\n        private $$startExtension (ctx: IParseContext, os: any[]) {\r\n            var full = ctx.acc;\r\n            var ind = full.indexOf(\":\");\r\n            var prefix = (ind < 0) ? null : full.substr(0, ind);\r\n            var name = (ind < 0) ? full : full.substr(ind + 1);\r\n            var uri = prefix ? ctx.resolver.lookupNamespaceURI(prefix) : DEFAULT_XMLNS;\r\n\r\n            var obj;\r\n            if (uri === this.$$xXmlns) {\r\n                if (name === \"Null\")\r\n                    obj = this.$$parseXNull(ctx);\r\n                else if (name === \"Type\")\r\n                    obj = this.$$parseXType(ctx);\r\n                else if (name === \"Static\")\r\n                    obj = this.$$parseXStatic(ctx);\r\n                else\r\n                    throw new Error(\"Unknown markup extension. [\" + prefix + \":\" + name + \"]\");\r\n            } else {\r\n                var ort = this.$$onResolveType(uri, name);\r\n                obj = this.$$onResolveObject(ort.type);\r\n            }\r\n            os.push(obj);\r\n        }\r\n\r\n        private $$parseXNull (ctx: IParseContext): any {\r\n            var ind = ctx.text.indexOf(\"}\", ctx.i);\r\n            if (ind < ctx.i)\r\n                throw new Error(\"Unterminated string constant.\");\r\n            ctx.i = ind;\r\n            return null;\r\n        }\r\n\r\n        private $$parseXType (ctx: IParseContext): any {\r\n            var end = ctx.text.indexOf(\"}\", ctx.i);\r\n            if (end < ctx.i)\r\n                throw new Error(\"Unterminated string constant.\");\r\n            var val = ctx.text.substr(ctx.i, end - ctx.i);\r\n            ctx.i = end;\r\n\r\n            var ind = val.indexOf(\":\");\r\n            var prefix = (ind < 0) ? null : val.substr(0, ind);\r\n            var name = (ind < 0) ? val : val.substr(ind + 1);\r\n            var uri = ctx.resolver.lookupNamespaceURI(prefix);\r\n            var ort = this.$$onResolveType(uri, name);\r\n            return ort.type;\r\n        }\r\n\r\n        private $$parseXStatic (ctx: IParseContext): any {\r\n            var text = ctx.text;\r\n            var len = text.length;\r\n            var start = ctx.i;\r\n            for (; ctx.i < len; ctx.i++) {\r\n                if (text[ctx.i] === \"}\" && text[ctx.i - 1] !== \"\\\\\")\r\n                    break;\r\n            }\r\n            var val = text.substr(start, ctx.i - start);\r\n\r\n            var func = new Function(\"return (\" + val + \");\");\r\n            return func();\r\n        }\r\n\r\n        private $$parseKeyValue (ctx: IParseContext, os: any[]): boolean {\r\n            var text = ctx.text;\r\n            ctx.acc = \"\";\r\n            var key = \"\";\r\n            var val: any = undefined;\r\n            var len = text.length;\r\n            var nonalpha = false;\r\n            for (; ctx.i < len; ctx.i++) {\r\n                var cur = text[ctx.i];\r\n                if (cur === \"\\\\\") {\r\n                    ctx.i++;\r\n                    ctx.acc += text[ctx.i];\r\n                } else if (cur === \"{\") {\r\n                    if (nonalpha || !isAlpha(text[ctx.i + 1])) {\r\n                        ctx.acc += cur;\r\n                        nonalpha = true;\r\n                        continue;\r\n                    }\r\n                    if (!key) {\r\n                        ctx.error = \"A sub extension must be set to a key.\";\r\n                        return false;\r\n                    }\r\n                    ctx.i++;\r\n                    val = this.$$doParse(ctx, os);\r\n                    if (ctx.error)\r\n                        return false;\r\n                } else if (cur === \"=\") {\r\n                    key = ctx.acc.trim();\r\n                    ctx.acc = \"\";\r\n                } else if (cur === \"}\") {\r\n                    if (nonalpha) {\r\n                        nonalpha = false;\r\n                        ctx.acc += cur;\r\n                    }\r\n                    this.$$finishKeyValue(ctx, key, val, os);\r\n                    return true;\r\n                } else if (cur === \",\") {\r\n                    ctx.i++;\r\n                    this.$$finishKeyValue(ctx, key, val, os);\r\n                    return true;\r\n                } else if (key && !ctx.acc && cur === \"'\") {\r\n                    ctx.i++;\r\n                    this.$$parseSingleQuoted(ctx);\r\n                    val = ctx.acc;\r\n                    ctx.acc = \"\";\r\n                } else {\r\n                    ctx.acc += cur;\r\n                }\r\n            }\r\n            throw new Error(\"Unterminated string constant.\");\r\n        }\r\n\r\n        private $$finishKeyValue (ctx: IParseContext, key: string, val: any, os: any[]) {\r\n            if (val === undefined) {\r\n                if (!(val = ctx.acc.trim()))\r\n                    return;\r\n            }\r\n\r\n            val = finishMarkupExtension(val, ctx.resolver, this.$$onResolveType, os);\r\n            var co = os[os.length - 1];\r\n            if (!key) {\r\n                co.init && co.init(val);\r\n            } else {\r\n                co[key] = val;\r\n            }\r\n        }\r\n\r\n        private $$parseSingleQuoted (ctx: IParseContext) {\r\n            var text = ctx.text;\r\n            var len = text.length;\r\n            for (; ctx.i < len; ctx.i++) {\r\n                var cur = text[ctx.i];\r\n                if (cur === \"\\\\\") {\r\n                    ctx.i++;\r\n                    ctx.acc += text[ctx.i];\r\n                } else if (cur === \"'\") {\r\n                    return;\r\n                } else {\r\n                    ctx.acc += cur;\r\n                }\r\n            }\r\n        }\r\n\r\n        private $$ensure () {\r\n            this.onResolveType(this.$$onResolveType)\r\n                .onResolveObject(this.$$onResolveObject)\r\n                .onError(this.$$onError);\r\n        }\r\n\r\n        onResolveType (cb?: events.IResolveType): XamlExtensionParser {\r\n            var oresolve: IOutType = {\r\n                isPrimitive: false,\r\n                type: Object\r\n            };\r\n            this.$$onResolveType = cb || ((xmlns, name) => oresolve);\r\n            return this;\r\n        }\r\n\r\n        onResolveObject (cb?: events.IResolveObject): XamlExtensionParser {\r\n            this.$$onResolveObject = cb || ((type) => new type());\r\n            return this;\r\n        }\r\n\r\n        onResolvePrimitive (cb?: events.IResolvePrimitive): XamlExtensionParser {\r\n            this.$$onResolvePrimitive = cb || ((type, text) => new type(text));\r\n            return this;\r\n        }\r\n\r\n        onError (cb?: events.IError): XamlExtensionParser {\r\n            this.$$onError = cb || ((e) => {\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function isAlpha (c: string): boolean {\r\n        if (!c)\r\n            return false;\r\n        var code = c[0].toUpperCase().charCodeAt(0);\r\n        return code >= 65 && code <= 90;\r\n    }\r\n}","module nullstone.markup.xaml {\r\n    var parser = new DOMParser();\r\n    var xcache = new Memoizer<XamlMarkup>((key) => new XamlMarkup(key));\r\n\r\n    export class XamlMarkup extends markup.Markup<Element> {\r\n        static create (uri: string): XamlMarkup;\r\n        static create (uri: Uri): XamlMarkup;\r\n        static create (uri: any): XamlMarkup {\r\n            return xcache.memoize(uri.toString());\r\n        }\r\n\r\n        createParser () {\r\n            return new XamlParser();\r\n        }\r\n\r\n        loadRoot (data: string): Element {\r\n            var doc = parser.parseFromString(data, \"text/xml\");\r\n            return doc.documentElement;\r\n        }\r\n    }\r\n}","module nullstone.markup.xaml {\r\n    export var DEFAULT_XMLNS = \"http://schemas.wsick.com/fayde\";\r\n    export var DEFAULT_XMLNS_X = \"http://schemas.wsick.com/fayde/x\";\r\n    var ERROR_XMLNS = \"http://www.w3.org/1999/xhtml\";\r\n    var ERROR_NAME = \"parsererror\";\r\n\r\n    export class XamlParser implements IMarkupParser<Element> {\r\n        private $$onResolveType: events.IResolveType;\r\n        private $$onResolveObject: events.IResolveObject;\r\n        private $$onResolvePrimitive: events.IResolvePrimitive;\r\n        private $$onResolveResources: events.IResolveResources;\r\n        private $$onBranchSkip: events.IBranchSkip<Element>;\r\n        private $$onObject: events.IObject;\r\n        private $$onObjectEnd: events.IObjectEnd;\r\n        private $$onContentText: events.IText;\r\n        private $$onName: events.IName;\r\n        private $$onPropertyStart: events.IPropertyStart;\r\n        private $$onPropertyEnd: events.IPropertyEnd;\r\n        private $$onAttributeStart: events.IAttributeStart;\r\n        private $$onAttributeEnd: events.IAttributeEnd;\r\n        private $$onError: events.IError;\r\n        private $$onEnd: () => any = null;\r\n\r\n        private $$extension: IMarkupExtensionParser;\r\n\r\n        private $$defaultXmlns: string;\r\n        private $$xXmlns: string;\r\n\r\n        private $$objectStack: any[] = [];\r\n        private $$skipnext = false;\r\n        private $$curel: Element = null;\r\n        private $$curkey: string = undefined;\r\n\r\n        constructor () {\r\n            this.setExtensionParser(new XamlExtensionParser())\r\n                .setNamespaces(DEFAULT_XMLNS, DEFAULT_XMLNS_X)\r\n                .on({});\r\n        }\r\n\r\n        on (listener: IMarkupSax<Element>): XamlParser {\r\n            listener = createMarkupSax(listener);\r\n\r\n            this.$$onResolveType = listener.resolveType;\r\n            this.$$onResolveObject = listener.resolveObject;\r\n            this.$$onResolvePrimitive = listener.resolvePrimitive;\r\n            this.$$onResolveResources = listener.resolveResources;\r\n            this.$$onBranchSkip = listener.branchSkip;\r\n            this.$$onObject = listener.object;\r\n            this.$$onObjectEnd = listener.objectEnd;\r\n            this.$$onContentText = listener.contentText;\r\n            this.$$onName = listener.name;\r\n            this.$$onPropertyStart = listener.propertyStart;\r\n            this.$$onPropertyEnd = listener.propertyEnd;\r\n            this.$$onAttributeStart = listener.attributeStart;\r\n            this.$$onAttributeEnd = listener.attributeEnd;\r\n            this.$$onError = listener.error;\r\n            this.$$onEnd = listener.end;\r\n\r\n            if (this.$$extension) {\r\n                this.$$extension\r\n                    .onResolveType(this.$$onResolveType)\r\n                    .onResolveObject(this.$$onResolveObject)\r\n                    .onResolvePrimitive(this.$$onResolvePrimitive);\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        setNamespaces (defaultXmlns: string, xXmlns: string): XamlParser {\r\n            this.$$defaultXmlns = defaultXmlns;\r\n            this.$$xXmlns = xXmlns;\r\n            if (this.$$extension)\r\n                this.$$extension.setNamespaces(this.$$defaultXmlns, this.$$xXmlns);\r\n            return this;\r\n        }\r\n\r\n        setExtensionParser (parser: IMarkupExtensionParser): XamlParser {\r\n            this.$$extension = parser;\r\n            if (parser) {\r\n                parser.setNamespaces(this.$$defaultXmlns, this.$$xXmlns)\r\n                    .onResolveType(this.$$onResolveType)\r\n                    .onResolveObject(this.$$onResolveObject)\r\n                    .onResolvePrimitive(this.$$onResolvePrimitive)\r\n                    .onError((e) => {\r\n                        throw e;\r\n                    });\r\n            }\r\n            return this;\r\n        }\r\n\r\n        parse (el: Element): XamlParser {\r\n            if (!this.$$extension)\r\n                throw new Error(\"No extension parser exists on parser.\");\r\n            this.$$handleElement(el, true);\r\n            this.$$destroy();\r\n            return this;\r\n        }\r\n\r\n        skipBranch () {\r\n            this.$$skipnext = true;\r\n        }\r\n\r\n        walkUpObjects (): IEnumerator<any> {\r\n            var os = this.$$objectStack;\r\n            var i = os.length;\r\n            return {\r\n                current: undefined,\r\n                moveNext (): boolean {\r\n                    i--;\r\n                    return (this.current = os[i]) !== undefined;\r\n                }\r\n            };\r\n        }\r\n\r\n        resolvePrefix (prefix: string): string {\r\n            return this.$$curel.lookupNamespaceURI(prefix);\r\n        }\r\n\r\n        private $$handleElement (el: Element, isContent: boolean) {\r\n            // NOTE: Handle tag open\r\n            //  <[ns:]Type.Name>\r\n            //  <[ns:]Type>\r\n            var old = this.$$curel;\r\n            this.$$curel = el;\r\n            var name = el.localName;\r\n            var xmlns = el.namespaceURI;\r\n            if (this.$$tryHandleError(el, xmlns, name) || this.$$tryHandlePropertyTag(el, xmlns, name)) {\r\n                this.$$curel = old;\r\n                return;\r\n            }\r\n\r\n            var os = this.$$objectStack;\r\n            var ort = this.$$onResolveType(xmlns, name);\r\n            if (this.$$tryHandlePrimitive(el, ort, isContent)) {\r\n                this.$$curel = old;\r\n                return;\r\n            }\r\n\r\n            var obj = this.$$onResolveObject(ort.type);\r\n            if (obj !== undefined) {\r\n                os.push(obj);\r\n                this.$$onObject(obj, isContent);\r\n            }\r\n\r\n            // NOTE: Handle resources before attributes and child elements\r\n            var resEl = findResourcesElement(el, xmlns, name);\r\n            if (resEl)\r\n                this.$$handleResources(obj, ort.type, resEl);\r\n\r\n            this.$$curkey = undefined;\r\n            // NOTE: Walk attributes\r\n            this.$$processAttributes(el);\r\n            var key = this.$$curkey;\r\n\r\n            if (this.$$skipnext) {\r\n                this.$$skipnext = false;\r\n                os.pop();\r\n                this.$$onObjectEnd(obj, key, isContent, os[os.length - 1]);\r\n                this.$$onBranchSkip(el.firstElementChild, obj);\r\n                this.$$curel = old;\r\n                return;\r\n            }\r\n\r\n            // NOTE: Walk Children\r\n            var child = el.firstElementChild;\r\n            var hasChildren = !!child;\r\n            while (child) {\r\n                if (!resEl || child !== resEl) //Skip Resources (will be done first)\r\n                    this.$$handleElement(child, true);\r\n                child = child.nextElementSibling;\r\n            }\r\n\r\n            // NOTE: If we did not hit a child tag, use text content\r\n            if (!hasChildren) {\r\n                var text = el.textContent;\r\n                if (text && (text = text.trim()))\r\n                    this.$$onContentText(text);\r\n            }\r\n\r\n            // NOTE: Handle tag close\r\n            //  </[ns:]Type.Name>\r\n            //  </[ns:]Type>\r\n            if (obj !== undefined) {\r\n                os.pop();\r\n                this.$$onObjectEnd(obj, key, isContent, os[os.length - 1]);\r\n            }\r\n            this.$$curel = old;\r\n        }\r\n\r\n        private $$handleResources (owner: any, ownerType: any, resEl: Element) {\r\n            var os = this.$$objectStack;\r\n            var rd = this.$$onResolveResources(owner, ownerType);\r\n            os.push(rd);\r\n            this.$$onObject(rd, false);\r\n            var child = resEl.firstElementChild;\r\n            while (child) {\r\n                this.$$handleElement(child, true);\r\n                child = child.nextElementSibling;\r\n            }\r\n            os.pop();\r\n            this.$$onObjectEnd(rd, undefined, false, os[os.length - 1]);\r\n        }\r\n\r\n        private $$tryHandleError (el: Element, xmlns: string, name: string): boolean {\r\n            if (xmlns !== ERROR_XMLNS || name !== ERROR_NAME)\r\n                return false;\r\n            this.$$onError(new Error(el.textContent));\r\n            return true;\r\n        }\r\n\r\n        private $$tryHandlePropertyTag (el: Element, xmlns: string, name: string): boolean {\r\n            var ind = name.indexOf('.');\r\n            if (ind < 0)\r\n                return false;\r\n\r\n            var ort = this.$$onResolveType(xmlns, name.substr(0, ind));\r\n            var type = ort.type;\r\n            name = name.substr(ind + 1);\r\n\r\n            this.$$onPropertyStart(type, name);\r\n\r\n            var child = el.firstElementChild;\r\n            while (child) {\r\n                this.$$handleElement(child, false);\r\n                child = child.nextElementSibling;\r\n            }\r\n\r\n            this.$$onPropertyEnd(type, name);\r\n\r\n            return true;\r\n        }\r\n\r\n        private $$tryHandlePrimitive (el: Element, oresolve: IOutType, isContent: boolean): boolean {\r\n            if (!oresolve.isPrimitive)\r\n                return false;\r\n            var text = el.textContent;\r\n            var obj = this.$$onResolvePrimitive(oresolve.type, text ? text.trim() : \"\");\r\n            this.$$onObject(obj, isContent);\r\n            this.$$curkey = undefined;\r\n            this.$$processAttributes(el);\r\n            var key = this.$$curkey;\r\n            var os = this.$$objectStack;\r\n            this.$$onObjectEnd(obj, key, isContent, os[os.length - 1]);\r\n            return true;\r\n        }\r\n\r\n        private $$processAttributes (el: Element) {\r\n            for (var i = 0, attrs = el.attributes, len = attrs.length; i < len; i++) {\r\n                this.$$processAttribute(attrs[i]);\r\n            }\r\n        }\r\n\r\n        private $$processAttribute (attr: Attr): boolean {\r\n            var prefix = attr.prefix;\r\n            var name = attr.localName;\r\n            if (this.$$shouldSkipAttr(prefix, name))\r\n                return true;\r\n            var uri = attr.namespaceURI;\r\n            var value = attr.value;\r\n            if (this.$$tryHandleXAttribute(uri, name, value))\r\n                return true;\r\n            return this.$$handleAttribute(uri, name, value, attr);\r\n        }\r\n\r\n        private $$shouldSkipAttr (prefix: string, name: string): boolean {\r\n            if (prefix === \"xmlns\")\r\n                return true;\r\n            return (!prefix && name === \"xmlns\");\r\n        }\r\n\r\n        private $$tryHandleXAttribute (uri: string, name: string, value: string): boolean {\r\n            //  ... x:Name=\"...\"\r\n            //  ... x:Key=\"...\"\r\n            if (uri !== this.$$xXmlns)\r\n                return false;\r\n            if (name === \"Name\")\r\n                this.$$onName(value);\r\n            if (name === \"Key\")\r\n                this.$$curkey = value;\r\n            return true;\r\n        }\r\n\r\n        private $$handleAttribute (uri: string, name: string, value: string, attr: Attr): boolean {\r\n            //  ... [ns:]Type.Name=\"...\"\r\n            //  ... Name=\"...\"\r\n\r\n            var type = null;\r\n            var name = name;\r\n            var ind = name.indexOf('.');\r\n            if (ind > -1) {\r\n                var ort = this.$$onResolveType(uri, name.substr(0, ind));\r\n                type = ort.type;\r\n                name = name.substr(ind + 1);\r\n            }\r\n            this.$$onAttributeStart(type, name);\r\n            var val = this.$$getAttrValue(value, attr);\r\n            this.$$onAttributeEnd(type, name, val);\r\n            return true;\r\n        }\r\n\r\n        private $$getAttrValue (val: string, attr: Attr): any {\r\n            if (val[0] !== \"{\")\r\n                return val;\r\n            return this.$$extension.parse(val, attr, this.$$objectStack);\r\n        }\r\n\r\n        private $$destroy () {\r\n            this.$$onEnd && this.$$onEnd();\r\n        }\r\n    }\r\n\r\n    function findResourcesElement (ownerEl: Element, uri: string, name: string): Element {\r\n        var expected = name + \".Resources\";\r\n        var child = ownerEl.firstElementChild;\r\n        while (child) {\r\n            if (child.localName === expected && child.namespaceURI === uri)\r\n                return child;\r\n            child = child.nextElementSibling;\r\n        }\r\n        return null;\r\n    }\r\n}"],"sourceRoot":"/source/"}